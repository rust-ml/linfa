(function() {
    var implementors = Object.fromEntries([["linfa",[["impl&lt;F, D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = F&gt;, L, P: <a class=\"trait\" href=\"linfa/traits/trait.PredictInplace.html\" title=\"trait linfa::traits::PredictInplace\">PredictInplace</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;D, <a class=\"type\" href=\"https://docs.rs/ndarray/0.15/ndarray/aliases/type.Ix2.html\" title=\"type ndarray::aliases::Ix2\">Ix2</a>&gt;, <a class=\"type\" href=\"https://docs.rs/ndarray/0.15/ndarray/aliases/type.Array1.html\" title=\"type ndarray::aliases::Array1\">Array1</a>&lt;<a class=\"struct\" href=\"linfa/dataset/struct.Pr.html\" title=\"struct linfa::dataset::Pr\">Pr</a>&gt;&gt; + 'static&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.tuple.html\">(L, P)</a>&gt; for <a class=\"struct\" href=\"linfa/composing/struct.MultiClassModel.html\" title=\"struct linfa::composing::MultiClassModel\">MultiClassModel</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;D, <a class=\"type\" href=\"https://docs.rs/ndarray/0.15/ndarray/aliases/type.Ix2.html\" title=\"type ndarray::aliases::Ix2\">Ix2</a>&gt;, L&gt;"],["impl&lt;F, D: <a class=\"trait\" href=\"https://docs.rs/ndarray/0.15/ndarray/data_traits/trait.Data.html\" title=\"trait ndarray::data_traits::Data\">Data</a>&lt;Elem = F&gt;, L, P: <a class=\"trait\" href=\"linfa/traits/trait.PredictInplace.html\" title=\"trait linfa::traits::PredictInplace\">PredictInplace</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;D, <a class=\"type\" href=\"https://docs.rs/ndarray/0.15/ndarray/aliases/type.Ix2.html\" title=\"type ndarray::aliases::Ix2\">Ix2</a>&gt;, <a class=\"type\" href=\"https://docs.rs/ndarray/0.15/ndarray/aliases/type.Array1.html\" title=\"type ndarray::aliases::Array1\">Array1</a>&lt;L&gt;&gt; + 'static&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;P&gt; for <a class=\"struct\" href=\"linfa/composing/struct.MultiTargetModel.html\" title=\"struct linfa::composing::MultiTargetModel\">MultiTargetModel</a>&lt;<a class=\"struct\" href=\"https://docs.rs/ndarray/0.15/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;D, <a class=\"type\" href=\"https://docs.rs/ndarray/0.15/ndarray/aliases/type.Ix2.html\" title=\"type ndarray::aliases::Ix2\">Ix2</a>&gt;, L&gt;"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[3010]}