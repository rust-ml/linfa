searchState.loadedDescShard("linfa_nn", 0, "<code>linfa-nn</code> provides Rust implementations of common spatial …\nImplementation of ball tree, a space partitioning data …\nBall Tree\nSpatial indexing structure created by <code>BallTree</code>\nError returned when building nearest neighbour indices\nEnum that dispatches to one of the crate’s …\nImplementation of K-D tree, a fast space-partitioning data …\nKD Tree\nSpatial indexing structure created by <code>KdTree</code>\nImplementation of linear search, which is the simplest …\nLinear search\nSpatial indexing structure created by <code>LinearSearch</code>\nNearest neighbour algorithm builds a spatial index …\nA spatial index structure over a set of points, created by …\nError returned when performing spatial queries on nearest …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBuilds a spatial index using a default leaf size. See …\nBuilds a spatial index using a MxN two-dimensional array …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>k</code> points in the index that are the closest to …\nCreates a <code>BallTreeIndex</code> using the K-D construction …\nCreates an instance of <code>BallTree</code>\nCreates a new <code>KdTreeIndex</code>\nCreates an instance of <code>KdTree</code>\nCreates a new <code>LinearSearchIndex</code>\nCreates an instance of <code>LinearSearch</code>\nReturns all the points in the index that are within the …\nA distance function that can be used in spatial algorithms …\nL1 or Manhattan distance\nL2 or Euclidean distance\nL-infinte or Chebyshev distance\nL-p or Minkowsky distance\nConverts the result of <code>distance</code> to <code>rdistance</code>\nComputes the distance between two points. For most spatial …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the result of <code>rdistance</code> to <code>distance</code>\nA faster version of the distance metric that keeps the …\nComputes a similarity matrix with gaussian kernel and …")