on: [push, pull_request]


name: Codequality Lints

jobs:
  codequality:
    name: codequality
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - 1.70.0
          - stable

    steps:
      - name: Checkout sources
        uses: actions/checkout@master

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run cargo clippy
        run: cargo clippy --all-targets -- -D warnings

  coverage:
    name: coverage
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout sources
        uses: actions/checkout@master

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Get rustc version
        id: rustc-version
        run: echo "::set-output name=version::$(cargo --version | cut -d ' ' -f 2)"
        shell: bash

      - uses: actions/cache@v2
        id: tarpaulin-cache
        with:
          path: |
            ~/.cargo/bin/cargo-tarpaulin
          key: ${{ runner.os }}-cargo-${{ steps.rustc-version.outputs.version }}

      - name: Install tarpaulin
        if: steps.tarpaulin-cache.outputs.cache-hit != 'true'
        run: cargo install cargo-tarpaulin

      - name: Generate code coverage
        run: |
          cargo tarpaulin --verbose --timeout 120 --out Xml --all --release
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
