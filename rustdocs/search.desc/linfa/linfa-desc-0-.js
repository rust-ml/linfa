searchState.loadedDescShard("linfa", 0, "<code>linfa</code> aims to provide a comprehensive toolkit to build …\nComposition models\nCorrelation analysis for dataset features\nDatasets\nError types in Linfa\nCommon metrics functions for classification and regression\nLinfa prelude.\nProvide traits for different classes of algorithms\nMerge models with binary to multi-class classification\nMerge models with single target to multi-target models\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a wrapper model from a list of single-target models\nImplement Platt calibration with Newton method\nFitted Platt model\nPlatt Newton’s method errors\nParameters for Platt’s Newton method\nCalibrate another model with Platt scaling\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the maximum number of iterations in the optimization …\nSet the minimum stepsize in the line search\nCreate default parameter set for the Platt scaling …\nRun Newton’s method to find optimal <code>A</code> and <code>B</code> values\nPredict a probability with the sigmoid function\nSet the Hessian’s sigma value\nPearson Correlation Coefficients (or Bivariate …\nReturns the argument unchanged.\nCalculate the Pearson Correlation Coefficients and …\nReturn the Pearson’s Correlation Coefficients\nReturn the p values supporting the null-hypothesis\nCalls <code>U::from(self)</code>.\nReturn a reference to multi-target variables.\nReturns a mutable reference to multi-target variables.\nConvert to probability matrix\nReturn a reference to single-target variables.\nReturns a mutable reference to single-target variables.\nReturn a reference to single or multiple target variables.\nReturn a mutable reference to single or multiple target …\nTargets with precomputed, counted labels\nDataset\nDatasetBase\nDatasetPr\nDatasetView\nFloating point numbers\nHelper trait to construct counted labels\nDiscrete labels\nGet the labels in all targets\nProbability types\nRecord trait\nAdd the Lapack bound to the floating point of a dataset\nRemove the Lapack bound to the floating point of a dataset\nApply bootstrapping for samples and features\nApply feature bootstrapping\nApply sample bootstrapping\nCross validation for single and multi-target algorithms\nSpecialized version of <code>cross_validate</code> for single-target …\nIterate over features\nReturns feature names\nPerforms K-folding on the dataset.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPerforms k-folding cross validation on fittable algorithms.\nCalculates label frequencies from a dataset\nCalculates label frequencies from a dataset while masking …\nLog loss of the probabilities of the binary target\nMap targets with a function <code>f</code>\nCreates probability from the given float.\nCreate a new dataset from records and targets\nCreate self object from new target array\nCreate self object from new target array\nCreates probability from the given float. Doesn’t check …\nReturn the number of targets in the dataset\nProduce N boolean targets from multi-class targets\nCalculate the Pearson Correlation Coefficients from a …\nCalculate the Pearson Correlation Coefficients and …\nReturn records of a dataset\nIterate over observations\nProduces a shuffled version of the current Dataset.\nSplit dataset into two disjoint chunks\nSplit dataset into two disjoint chunks\nSplit dataset into two disjoint chunks\nIterate over targets\nReturns target names\nReturns reference to targets\nCreates a view of a dataset\nReturn a single weight\nReturns optionally weights\nUpdates the feature names of a dataset\nTransforms the input dataset by keeping only those samples …\nAdd trait bound <code>Lapack</code> and <code>Scalar</code> to NdArray’s floating …\nAdd trait bound <code>Lapack</code> and <code>Scalar</code> to NdArray’s floating …\nUpdates the records of a dataset\nUpdates the target names of a dataset\nUpdates the targets of a dataset\nUpdates the weights of a dataset\nAdd trait bound <code>Lapack</code> and <code>Scalar</code> to NdArray’s floating …\nAdd trait bound <code>Lapack</code> and <code>Scalar</code> to NdArray’s floating …\nContains the error value\nContains the success value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nClassification for binary-labels\nConfusion matrix for multi-label evaluation\nRegression metrices trait for multiple targets.\nA Receiver Operating Characteristic for binary-label …\nEvaluates the quality of a clustering using euclidean …\nRegression metrices trait for single targets.\nClassification for multi-label evaluation\nAccuracy score\nReturns the Area-Under-Curve metric\nSame as R-Squared but with biased variance\nSame as R-Squared but with biased variance\nSame as R-Squared but with biased variance\nSame as R-Squared but with biased variance\nF1-score, this is the F-beta-score for beta=1\nF-beta-score\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the true-positive, false-positive curve\nReturns the threshold corresponding to each point\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximal error between two continuous variables\nMaximal error between two continuous variables\nMaximal error between two continuous variables\nMaximal error between two continuous variables\nMatthew Correlation Coefficients\nMean error between two continuous variables\nMean error between two continuous variables\nMean error between two continuous variables\nMean error between two continuous variables\nMean absolute percentage error between two continuous …\nMean absolute percentage error between two continuous …\nMean absolute percentage error between two continuous …\nMean absolute percentage error between two continuous …\nMean squared error between two continuous variables\nMean squared error between two continuous variables\nMean squared error between two continuous variables\nMean squared error between two continuous variables\nMean squared log error between two continuous variables\nMean squared log error between two continuous variables\nMean squared log error between two continuous variables\nMean squared log error between two continuous variables\nMedian absolute error between two continuous variables\nMedian absolute error between two continuous variables\nMedian absolute error between two continuous variables\nMedian absolute error between two continuous variables\nPrecision score, the number of correct classifications for …\nR squared coefficient, is the proportion of the variance …\nR squared coefficient, is the proportion of the variance …\nR squared coefficient, is the proportion of the variance …\nR squared coefficient, is the proportion of the variance …\nRecall score, the number of correct classifications in the …\nEvaluates the quality of a clustering.\nSplit confusion matrix in N one-vs-all binary confusion …\nSplit confusion matrix in N*(N-1)/2 one-vs-one binary …\nThe checked hyperparameters\nError type resulting from failed hyperparameter checking\nA set of hyperparameters whose values have not been …\nImplement this trait to opt into a blanket <code>Transformer</code> …\nChecks the hyperparameters and returns the checked …\nChecks the hyperparameters and returns a reference to the …\nCalls <code>check()</code> and unwraps the result\nFittable algorithms\nIncremental algorithms\nPredict with model\nPredict with model into a mutable reference of targets.\nTransformation algorithms\nCreate targets that <code>predict_inplace</code> works with.\nPredict something in place")